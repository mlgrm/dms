version: "3"
services:
  ocpu:
    restart: on-failure
    image: mlgrm/dms-ocpu
      traefik.enable: 'true'
      traefik.frontend.rule: "Host:$RSERVER_DOMAIN_NAME"
      traefik.port: '8080'
      traefik.docker.network: "proxynet"
      traefik.frontend.entryPoints: "http,https"
    ports:
      - "8787"
      - "8004"
      
    hostname: ocpu
    #command: apachectl -DFOREGROUND
    networks:
      - webservices
    volumes:
      - ./rstudio.conf:/etc/apache2/sites-enabled/rstudio.conf
    environment:
      POSTGRES_PASSWORD: "$POSTGRES_PASSWORD"

  superset:
    name: superset
    image: amancevice/superset
    restart: always
    labels:
      traefik.enable: 'true'
      traefik.frontend.rule: "Host:$SUPERSET_DOMAIN_NAME"
      traefik.port: '8080'
      traefik.docker.network: "proxynet"
      traefik.frontend.entryPoints: "http,https"
    ports:
      - "8088"
    volumes: # these need to be owned by uid 1000
      - ./superset/superset_config.py:/etc/superset/superset_config.py
      - ./superset/data/:/var/lib/superset/
    networks:
      - webservices
    environment:
      MAPBOX_API_KEY: "$MAPBOX_API_KEY"
      POSTGRES_PASSWORD: "$POSTGRES_PASSWORD"
    depends_on:
      - redis
      - postgres
      - traefik

  redis:
    image: redis
    restart: always
    ports:
      - "6379"
    volumes:
      - redis:/data
    networks:
      - default
      - webservices
  
  postgres:
    image: library/postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "$POSTGRES_DB"
      POSTGRES_PASSWORD: "$POSTGRES_PASSWORD"
      POSTGRES_USER: "$POSTGRES_USER"
    volumes:
      - ./postgres/data/:/var/lib/postgresql/data/
    networks:
      - webservices

  pgadmin:
    image: chorss/docker-pgadmin4
    ports:
      - "5050:5050"
    environment:
      UID: 1000
      GID: 1000
    volumes:
      - ./pgadmin/data:/data/chorss/docker-pgadmin4
    networks:
      - webservices

  traefik:
    image: traefik:1.5-alpine
    restart: on-failure
    container_name: traefik
    hostname: traefik
    networks:
      - default
      - webservices
    ports:
      - "8080:8080"
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
      - ./acme:/etc/traefik/acme
      - ./log:/log



networks:
  webservices:
    external: false
    
volumes:
  redis:
    external: false
